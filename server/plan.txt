31/10/2022
SERVER side plan:

Routes:
/api/users:

- ADD VALIDATION MIDDLWARE (express-validator)

/register (POST) EDITED 08.11.2022
- get form input from req.body
- hash password
- creat JWT token and send email with it in url
- create frontend page for url
- frontend post req to verify --> go to /verify route

/login (POST)
- get form input from req.body
- check if user with email exists
- compare raw password with hashed in database
- if matches, redirect user to home page

03/11/2022

/profile (GET)
- check cookie id to see if matches,
- if user with cookie id exists, -->
- send the user data to frontend

/logout (POST)
- destroy the cookie

05/11/2022
 - verify email on Register
 - reset password password
 - Make blog API
 
/verify (POST)
  - create verify route in routes
  - get token from body 
  - verify the JWT token 
  - get all the user data from token
  - save new user in DB
  - check if the new user was saved
  - verify user and send 200 res

/resend-verify (POST) --NOT IN USE NOW
 - get email from req.body form (user)
 - check if user with email exists in database
 - resend the verification email

/forgot-password (POST)
 - get email from req.body 
 - check if user exists
 - send forgot password link to email

/reset-password (POST/PATCH)
 - get token from request params
 - check if user with token exists
 - get new password from body
 - update to new password (set in mongodb)
 

08.11.2022

create new router for blog
create Model for blog

/api/blogs:

/ (GET)
 - return all blogs 
 - Who: user and admin
 - LoggedIn

/:id (GET)
 - return a single blog by id
  - Who: user and admin
 - LoggedIn

/ (POST)
 - create a new blog
  - Who: admin
  - LoggedIn

/:id (POST/PUT)
 - update a blog by id
 - Who: admin
 - LoggedIn

/:id (DELETE/POST)
 - delete a blog by id
   - Who: admin
   - LoggedIn